{"version":3,"sources":["webpack://klouds/webpack/universalModuleDefinition","webpack://klouds/webpack/bootstrap","webpack://klouds/./src/index.ts","webpack://klouds/./src/shader.vert","webpack://klouds/./src/shader.frag","webpack://klouds/./src/graphics.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","shader_vert_1","shader_frag_1","graphics_1","parseColor","color","result","div","document","createElement","style","display","body","appendChild","numColors","getComputedStyle","match","intColors","map","a","parseInt","parentElement","removeChild","length","normalizeColor","forEach","idx","Array","isArray","slice","VERSION","Klouds","options","_this","this","isRunning","accumTime","lastTime","performance","now","render","time","gl","program","buffer","dt","speed","resizeCanvasToDisplaySize","canvas","viewport","width","height","useProgram","handle","bindBuffer","ARRAY_BUFFER","posAttrib","attributes","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniforms","uniform1f","layerCount","uniform3fv","bgColor","cloudColor1","cloudColor2","drawArrays","TRIANGLES","requestAnimationFrame","queryRootElement","selector","Error","initGraphics","setSpeed","setLayerCount","setBgColor","setCloudColor1","setCloudColor2","start","element","querySelector","HTMLCanvasElement","console","error","HTMLElement","createContext","createProgram","createBuffer","deleteProgram","bufferData","Float32Array","reduce","prev","cur","concat","STATIC_DRAW","stop","Math","max","min","count","getSpeed","getLayerCount","getBgColor","getCloudColor1","getCloudColor2","jQuery","fn","elements","skies","push","__webpack_exports__","ShaderType","createShader","type","source","shader","VERTEX","VERTEX_SHADER","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","debug","getShaderInfoLog","deleteShader","getContext","vertShaderSrc","fragShaderSrc","attributeNames","uniformNames","vertexShader","fragmentShader","FRAGMENT","attachShader","linkProgram","validateProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VALIDATE_STATUS","name_1","attr","getAttribLocation","name_2","uniform","getUniformLocation","clientWidth","clientHeight"],"mappings":"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","file":"klouds.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"klouds\"] = factory();\n\telse\n\t\troot[\"klouds\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import vs from './shader.vert'\r\nimport fs from './shader.frag'\r\nimport {\r\n  createContext,\r\n  createProgram,\r\n  Program,\r\n  resizeCanvasToDisplaySize\r\n} from './graphics'\r\n\r\nexport type Vec3 = [number, number, number]\r\n\r\ndeclare const PACKAGE_VERSION: any\r\nexport const VERSION: string = PACKAGE_VERSION\r\n\r\nfunction normalizeColor(color: string): Vec3 {\r\n  const div = document.createElement('div')\r\n  div.style.display = 'none'\r\n  div.style.color = color\r\n\r\n  document.body.appendChild(div)\r\n\r\n  const strColors = getComputedStyle(div).color || 'rgb(0, 0, 0)'\r\n  const numColors = strColors.match(/[+-]?\\d+(\\.\\d+)?/g)\r\n  const intColors = numColors ? numColors.map(a => parseInt(a, 10)) : [0, 0, 0]\r\n\r\n  if (div.parentElement) {\r\n    div.parentElement.removeChild(div)\r\n  }\r\n\r\n  if (intColors.length > 3) {\r\n    intColors.length = 3\r\n  } else if (intColors.length < 3) {\r\n    return [0, 0, 0]\r\n  }\r\n\r\n  return intColors as Vec3\r\n}\r\n\r\nfunction parseColor(color: string | Vec3): Vec3 {\r\n  let result: Vec3 = [0, 0, 0]\r\n\r\n  if (typeof color === 'string') {\r\n    normalizeColor(color).forEach((color, idx) => {\r\n      result[idx] = color / 255\r\n    })\r\n  } else if (Array.isArray(color) && color.length === 3) {\r\n    color.slice(0, 3).forEach((color, idx) => {\r\n      result[idx] = color / 255\r\n    })\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport interface KloudsOptions {\r\n  selector: string | HTMLCanvasElement\r\n  speed?: number\r\n  layerCount?: number\r\n  bgColor?: Vec3\r\n  cloudColor1?: Vec3\r\n  cloudColor2?: Vec3\r\n}\r\n\r\nexport class Klouds {\r\n  private gl!: WebGLRenderingContext\r\n  private program!: Program\r\n  private buffer!: WebGLBuffer\r\n\r\n  private isRunning: boolean = false\r\n  private accumTime: number = 0\r\n  private lastTime: number = performance.now()\r\n\r\n  private speed!: number\r\n  private layerCount!: number\r\n  private bgColor!: Vec3\r\n  private cloudColor1!: Vec3\r\n  private cloudColor2!: Vec3\r\n\r\n  constructor(options: KloudsOptions) {\r\n    const canvas = this.queryRootElement(options.selector)\r\n    if (!canvas) {\r\n      throw new Error(`Invalid options.selector value passed to Klouds`)\r\n    }\r\n\r\n    const speed = options.speed || 1\r\n    const layerCount = options.layerCount || 5\r\n\r\n    const cloudColor1: Vec3 = options.cloudColor1 || [25, 178, 204]\r\n    const cloudColor2: Vec3 = options.cloudColor2 || [255, 255, 255]\r\n    const bgColor: Vec3 = options.bgColor || [0, 102, 128]\r\n\r\n    canvas.style.width = '100%'\r\n    canvas.style.height = '100%'\r\n\r\n    this.initGraphics(canvas)\r\n\r\n    this.setSpeed(speed)\r\n    this.setLayerCount(layerCount)\r\n    this.setBgColor(bgColor)\r\n    this.setCloudColor1(cloudColor1)\r\n    this.setCloudColor2(cloudColor2)\r\n\r\n    this.start()\r\n  }\r\n\r\n  private queryRootElement(selector: any): HTMLCanvasElement | null {\r\n    if (typeof selector === 'string') {\r\n      const element = document.querySelector(selector)\r\n      if (!element) {\r\n        console.error('options.selector element not found')\r\n        return null\r\n      } else if (!(element instanceof HTMLCanvasElement)) {\r\n        console.error('options.selector element is not a <canvas> element')\r\n        return null\r\n      } else {\r\n        return element\r\n      }\r\n    } else if (selector instanceof HTMLElement) {\r\n      if (selector instanceof HTMLCanvasElement) {\r\n        return selector\r\n      } else {\r\n        console.error('options.selector element is not a <canvas> element')\r\n        return null\r\n      }\r\n    } else {\r\n      console.error('options.selector value is invalid')\r\n      return null\r\n    }\r\n  }\r\n\r\n  private initGraphics(canvas: HTMLCanvasElement) {\r\n    const gl = createContext(canvas)\r\n    if (!gl) {\r\n      throw new Error('Failed to create WebGL context')\r\n    }\r\n\r\n    const program = createProgram(\r\n      gl,\r\n      vs,\r\n      fs,\r\n      ['position'],\r\n      [\r\n        'resolution',\r\n        'layerCount',\r\n        'time',\r\n        'bgColor',\r\n        'cloudColor1',\r\n        'cloudColor2'\r\n      ]\r\n    )\r\n    if (!program) {\r\n      throw new Error('Failed to create WebGL program')\r\n    }\r\n\r\n    const buffer = gl.createBuffer()\r\n    if (!buffer) {\r\n      gl.deleteProgram(program)\r\n      throw new Error('Failed to create WebGL buffer')\r\n    }\r\n\r\n    const posAttrib = program.attributes['position']\r\n    gl.enableVertexAttribArray(posAttrib)\r\n    gl.vertexAttribPointer(posAttrib, 3, gl.FLOAT, false, 0, 0)\r\n\r\n    const bufferData = [\r\n      [-1, -1, 0],\r\n      [1, -1, 0],\r\n      [-1, 1, 0],\r\n      [-1, 1, 0],\r\n      [1, -1, 0],\r\n      [1, 1, 0]\r\n    ]\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\r\n    gl.bufferData(\r\n      gl.ARRAY_BUFFER,\r\n      new Float32Array(bufferData.reduce((prev, cur) => prev.concat(cur), [])),\r\n      gl.STATIC_DRAW\r\n    )\r\n\r\n    this.gl = gl\r\n    this.program = program\r\n    this.buffer = buffer\r\n  }\r\n\r\n  private render = (time: number) => {\r\n    const gl = this.gl\r\n    const program = this.program\r\n    const buffer = this.buffer\r\n\r\n    const dt = (time - this.lastTime) * this.speed * 0.001\r\n    this.accumTime += dt\r\n    this.lastTime = time\r\n\r\n    resizeCanvasToDisplaySize(gl.canvas)\r\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height)\r\n\r\n    gl.useProgram(program.handle)\r\n\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\r\n    const posAttrib = program.attributes['position']\r\n    gl.enableVertexAttribArray(posAttrib)\r\n    gl.vertexAttribPointer(posAttrib, 3, gl.FLOAT, false, 0, 0)\r\n\r\n    gl.uniform2f(\r\n      program.uniforms['resolution'],\r\n      gl.canvas.width,\r\n      gl.canvas.height\r\n    )\r\n    gl.uniform1f(program.uniforms['layerCount'], this.layerCount)\r\n    gl.uniform1f(program.uniforms['time'], this.accumTime)\r\n    gl.uniform3fv(program.uniforms['bgColor'], this.bgColor)\r\n    gl.uniform3fv(program.uniforms['cloudColor1'], this.cloudColor1)\r\n    gl.uniform3fv(program.uniforms['cloudColor2'], this.cloudColor2)\r\n\r\n    gl.drawArrays(gl.TRIANGLES, 0, 6)\r\n\r\n    if (this.isRunning) {\r\n      requestAnimationFrame(this.render)\r\n    }\r\n  }\r\n\r\n  start() {\r\n    if (this.isRunning) {\r\n      return\r\n    }\r\n\r\n    this.isRunning = true\r\n    requestAnimationFrame(this.render)\r\n  }\r\n\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  setSpeed(speed: number) {\r\n    this.speed = Math.max(-100, Math.min(100, speed))\r\n  }\r\n\r\n  setCloudColor1(color: string | Vec3) {\r\n    const c = parseColor(color)\r\n\r\n    if (c) {\r\n      this.cloudColor1 = c\r\n    }\r\n  }\r\n\r\n  setCloudColor2(color: string | Vec3) {\r\n    const c = parseColor(color)\r\n\r\n    if (c) {\r\n      this.cloudColor2 = c\r\n    }\r\n  }\r\n\r\n  setBgColor(color: string | Vec3) {\r\n    const c = parseColor(color)\r\n\r\n    if (c) {\r\n      this.bgColor = c\r\n    }\r\n  }\r\n\r\n  setLayerCount(count: number) {\r\n    this.layerCount = Math.max(1, Math.min(8, count)) / 10\r\n  }\r\n\r\n  getSpeed() {\r\n    return this.speed\r\n  }\r\n\r\n  getLayerCount() {\r\n    return this.layerCount\r\n  }\r\n\r\n  getBgColor() {\r\n    return this.bgColor.slice()\r\n  }\r\n\r\n  getCloudColor1() {\r\n    return this.cloudColor1.slice()\r\n  }\r\n\r\n  getCloudColor2() {\r\n    return this.cloudColor2.slice()\r\n  }\r\n}\r\n\r\nexport function create(options: KloudsOptions) {\r\n  return new Klouds(options)\r\n}\r\n\r\nif (window && typeof (window as any).jQuery !== 'undefined') {\r\n  ;(window as any).jQuery.fn.Klouds = function(options: KloudsOptions) {\r\n    options = options || {}\r\n    const elements = this.get()\r\n    const skies = []\r\n    for (let i = 0; i < elements.length; ++i) {\r\n      options.selector = elements[i]\r\n      skies.push(new Klouds(options))\r\n    }\r\n\r\n    return skies\r\n  }\r\n}\r\n","export default \"attribute vec3 position;\\n\\nvoid main() {\\n    gl_Position = vec4(position, 1.0);\\n}\\n\"","export default \"precision mediump float;\\n\\nuniform vec2 resolution;\\nuniform float layerCount;\\nuniform float time;\\nuniform vec3 bgColor;\\nuniform vec3 cloudColor1;\\nuniform vec3 cloudColor2;\\n\\n#define TAU 6.28318530718\\n\\nfloat func(float pX) {\\n    return 0.6 * (0.5 * sin(0.1 * pX) + 0.5 * sin(0.553 * pX) + 0.7 * sin(1.2 * pX));\\n}\\n\\nfloat funcR(float pX) {\\n    return 0.5 + 0.25 * (1.0 + sin(mod(40.0 * pX, TAU)));\\n}\\n\\nfloat layer(vec2 pQ, float pT) {\\n    vec2 Qt = 3.5 * pQ;\\n    pT *= 0.5;\\n    Qt.x += pT;\\n\\n    float Xi = floor(Qt.x);\\n    float Xf = Qt.x - Xi - 0.5;\\n\\n    vec2 C;\\n    float Yi;\\n    float D = 1.0 - step(Qt.y,  func(Qt.x));\\n\\n    Yi = func(Xi + 0.5);\\n    C = vec2(Xf, Qt.y - Yi ); \\n    D =  min(D, length(C) - funcR(Xi + pT / 80.0));\\n\\n    Yi = func(Xi + 1.0 + 0.5);\\n    C = vec2(Xf - 1.0, Qt.y - Yi ); \\n    D =  min(D, length(C) - funcR(Xi + 1.0+ pT / 80.0));\\n\\n    Yi = func(Xi - 1.0 + 0.5);\\n    C = vec2(Xf + 1.0, Qt.y - Yi ); \\n    D =  min(D, length(C) - funcR(Xi - 1.0 + pT / 80.0));\\n\\n    return min(1.0, D);\\n}\\n\\nvoid main() {\\n    float t = time;\\n    vec2 UV = 2.0 * (gl_FragCoord.xy - resolution.xy / 2.0) / min(resolution.x, resolution.y);\\t\\n    \\n    vec3 Color = bgColor;\\n\\n    for(float i = 0.0; i < 0.8; i += 0.1) {\\n        if (i >= layerCount) {\\n            break;\\n        }\\n\\n        float Lt =  t * (0.5 + 2.0 * i) * (1.0 + 0.1 * sin(226.0 * i)) + 1000.0 * i;\\n        vec2 Lp = vec2(100.0 * i, 0.8 * (i / (layerCount - 0.0999) / 0.8) - 0.3);\\n        float L = layer(UV + Lp, Lt);\\n\\n        float Blur = 4.0 * (0.5 * abs(2.0 - 5.0 * i)) / (11.0 - 5.0 * i);\\n\\n        float V = mix(0.0, 1.0, 1.0 - smoothstep(0.0, 0.01 + 0.2 * Blur, L));\\n        vec3 Lc = mix(cloudColor1, cloudColor2, i / (layerCount - 0.0999) / 0.8);\\n\\n        Color = mix(Color, Lc,  V);\\n    }\\n\\n    gl_FragColor = vec4(Color, 1.0);\\n}\\n\"","export function createContext(canvas: HTMLCanvasElement) {\n  return canvas.getContext('webgl')\n}\n\nexport enum ShaderType {\n  VERTEX,\n  FRAGMENT\n}\n\nexport function createShader(\n  gl: WebGLRenderingContext,\n  type: ShaderType,\n  source: string\n) {\n  const shader =\n    type === ShaderType.VERTEX\n      ? gl.createShader(gl.VERTEX_SHADER)\n      : gl.createShader(gl.FRAGMENT_SHADER)\n  if (!shader) {\n    console.error('Failed to create WebGL shader')\n    return null\n  }\n\n  gl.shaderSource(shader, source)\n  gl.compileShader(shader)\n\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    console.debug(gl.getShaderInfoLog(shader))\n    console.error('Failed to compile WebGL shader')\n    gl.deleteShader(shader)\n    return null\n  }\n\n  return shader\n}\n\nexport function createProgram(\n  gl: WebGLRenderingContext,\n  vertShaderSrc: string,\n  fragShaderSrc: string,\n  attributeNames: string[],\n  uniformNames: string[]\n) {\n  const program = gl.createProgram()\n  if (!program) {\n    console.error('Failed to create WebGL program')\n    return null\n  }\n\n  const vertexShader = createShader(gl, ShaderType.VERTEX, vertShaderSrc)\n  const fragmentShader = createShader(gl, ShaderType.FRAGMENT, fragShaderSrc)\n\n  if (!vertexShader || !fragmentShader) {\n    console.error('Failed to create a shader while creating a program')\n    return null\n  }\n\n  gl.attachShader(program, vertexShader)\n  gl.attachShader(program, fragmentShader)\n  gl.linkProgram(program)\n  gl.validateProgram(program)\n\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    gl.deleteProgram(program)\n    gl.deleteShader(vertexShader)\n    gl.deleteShader(fragmentShader)\n\n    console.error(`Failed to link WebGL program`)\n    console.debug(gl.getProgramInfoLog(program))\n    return null\n  }\n\n  if (!gl.getProgramParameter(program, gl.VALIDATE_STATUS)) {\n    gl.deleteProgram(program)\n    gl.deleteShader(vertexShader)\n    gl.deleteShader(fragmentShader)\n\n    console.error(`Failed to validate WebGL program`)\n    console.debug(gl.getProgramInfoLog(program))\n    return null\n  }\n\n  const attributes: { [name: string]: number } = {}\n  for (let i = 0; i < attributeNames.length; ++i) {\n    const name = attributeNames[i]\n    const attr = gl.getAttribLocation(program, name)\n    if (attr === -1) {\n      console.error(`Program attribute named \"${name}\" doesn't exist`)\n      gl.deleteProgram(program)\n      return null\n    }\n    attributes[name] = attr\n  }\n\n  const uniforms: { [name: string]: WebGLUniformLocation } = {}\n  for (let i = 0; i < uniformNames.length; ++i) {\n    const name = uniformNames[i]\n    const uniform = gl.getUniformLocation(program, name)\n    if (uniform === null) {\n      console.error(`Program uniform named \"${name}\" doesn't exist`)\n      gl.deleteProgram(program)\n      return null\n    }\n    uniforms[name] = uniform\n  }\n\n  return {\n    handle: program,\n    attributes,\n    uniforms\n  }\n}\n\nexport interface Program {\n  handle: WebGLProgram\n  attributes: { [name: string]: number }\n  uniforms: { [name: string]: WebGLUniformLocation }\n}\n\nexport function resizeCanvasToDisplaySize(canvas: HTMLCanvasElement) {\n  const width = canvas.clientWidth\n  const height = canvas.clientHeight\n  if (canvas.width !== width || canvas.height !== height) {\n    canvas.width = width\n    canvas.height = height\n    return true\n  }\n\n  return false\n}\n"],"sourceRoot":""}